$#include "network.h"

void InitNetwork1(void);
void ExitNetwork1(void);

bool IsNetworkGame();

int NetworkSetupServerAddress(const std::string serveraddr);
void NetworkInitClientConnect(void);
void NetworkInitServerConnect(int openslots);
void NetworkServerStartGame(void);
void NetworkProcessClientRequest(void);
$int GetNetworkState() {return (int)NetLocalState;}
int GetNetworkState();
void NetworkServerResyncClients(void);
void NetworkDetachFromServer(void);

class ServerSetup {
	unsigned char ResourcesOption;
	unsigned char UnitsOption;
	unsigned char FogOfWar;
	unsigned char RevealMap;
	unsigned char TilesetSelection;
	unsigned char GameTypeOption;
	unsigned char Difficulty;
	unsigned char MapRichness;
	unsigned CompOpt[PlayerMax];
	unsigned Ready[PlayerMax];
	unsigned long LastFrame[PlayerMax];
};
extern ServerSetup LocalSetupState;
extern ServerSetup ServerSetupState;
extern int NetLocalHostsSlot;
struct NetworkHost {
	unsigned long  Host;         /// Host address
	unsigned short Port;         /// Port on host
	unsigned short PlyNr;        /// Player nummer
	char           PlyName[16];  /// Name of player
};
extern NetworkHost Hosts[PlayerMax];

$extern char NetworkMapName[256];
char NetworkMapName[256];

$void NetworkGamePrepareGameSettings(void);
void NetworkGamePrepareGameSettings(void);

